---
import { default as Layout } from "@/src/layouts/static-layout.astro";
import { Image } from "astro:assets";
import NewsReader from "@/src/components/ui/news-reader.astro";
import SlideShow from "@/src/components/ui/slide-show.astro";
import image1 from "@/src/assets/12CDEA0D-D193-4612-8409-DA5F09AF369F.webp";
import image2 from "@/src/assets/78A41333-2C01-46AF-9417-AF191C90DA22.webp";
import image3 from "@/src/assets/79F41C00-C965-4E2F-BE27-A3870AF38735.webp";
import image4 from "@/src/assets/854691DD-9133-411B-92B1-898246981D1E.webp";
import image5 from "@/src/assets/B92DA480-D961-4060-913B-63634CDB05A6.webp";
---

<Layout title="ホーム">
    <div class="geometric-background" aria-hidden="true">
        <div class="shape circle1"></div>
        <div class="shape circle2"></div>
        <div class="shape circle3"></div>
    </div>
    <div class="hero">
        <div class="hero-content">
            <h1 class="hero-title">大阪公立大学合気道部</h1>
            <p>
                大阪公立大学合気道部は、大阪公立大学中百舌鳥キャンパス、杉本キャンパスで活動する、体育会所属の合気道団体です。
            </p>
            <a
                href="/about"
                class="hero-link"
                aria-label="大阪公立大学合気道部についてもっと詳しく知る"
            >
                <p>もっと知る</p>
            </a>
        </div>
        <div class="hero-slide">
            <SlideShow
                interval={4000}
                autoplay={true}
                showNavigation={true}
                showIndicators={true}
                enableSwipe={true}
                aria-label="合気道部の活動写真スライドショー"
            >
                <div class="slide">
                    <div class="slide-content image-content">
                        <Image
                            src={image1}
                            alt="合気道の稽古風景1"
                            loading="eager"
                            widths={[540, 720, image1.width]}
                            sizes="(max-width: 815px) 100vw, 50vw"
                            format="webp"
                            quality="high"
                        />
                    </div>
                </div>
                <div class="slide">
                    <div class="slide-content image-content">
                        <Image
                            src={image2}
                            alt="合気道の稽古風景2"
                            loading="lazy"
                            widths={[540, 720, image2.width]}
                            sizes="(max-width: 815px) 100vw, 50vw"
                            format="webp"
                            quality="high"
                        />
                    </div>
                </div>
                <div class="slide">
                    <div class="slide-content image-content">
                        <Image
                            src={image3}
                            alt="合気道の稽古風景3"
                            loading="lazy"
                            widths={[540, 720, image3.width]}
                            sizes="(max-width: 815px) 100vw, 50vw"
                            format="webp"
                            quality="high"
                        />
                    </div>
                </div>
                <div class="slide">
                    <div class="slide-content image-content">
                        <Image
                            src={image4}
                            alt="合気道の稽古風景4"
                            loading="lazy"
                            widths={[540, 720, image4.width]}
                            sizes="(max-width: 815px) 100vw, 50vw"
                            format="webp"
                            quality="high"
                        />
                    </div>
                </div>
                <div class="slide">
                    <div class="slide-content image-content">
                        <Image
                            src={image5}
                            alt="合気道の稽古風景5"
                            loading="lazy"
                            widths={[540, 720, image5.width]}
                            sizes="(max-width: 815px) 100vw, 50vw"
                            format="webp"
                            quality="high"
                        />
                    </div>
                </div>
            </SlideShow>
        </div>
    </div>

    <NewsReader
        content="short"
        path="news"
        source="news"
        aria-label="最新のお知らせ"
    />

    <section
        class="what-is-aikido-section"
        role="region"
        aria-labelledby="aikido-heading"
    >
        <a href="/about/what-is" aria-label="合気道についての詳細を知る">
            <div class="wia-container">
                <div class="what-is-aikido-link">
                    <h2
                        id="aikido-heading"
                        style="margin: 0.5rem;"
                        class="section-title"
                    >
                        合気道を知る>>>
                    </h2>
                </div>
                <div class="background" aria-hidden="true"></div>
            </div>
        </a>
    </section>

    <section
        class="links-section"
        role="navigation"
        aria-labelledby="site-navigation"
    >
        <h2 id="site-navigation" class="section-title">サイト案内</h2>
        <div class="links-container">
            <a
                href="/access"
                class="links-item"
                aria-label="活動場所とアクセス方法を確認する"
            >
                <h4>活動場所</h4>
                <p>稽古場所へのアクセス</p>
            </a>

            <a
                href="/schedule"
                class="links-item"
                aria-label="活動予定とスケジュールを確認する"
            >
                <h4>活動予定</h4>
                <p>リアルタイムで更新されるカレンダー</p>
            </a>

            <a
                href="/social"
                class="links-item"
                aria-label="SNS公式アカウントを確認する"
            >
                <h4>SNS</h4>
                <p>公式アカウントへのリンク</p>
            </a>

            <a
                href="/about/links"
                class="links-item"
                aria-label="関連団体サイトリンク集を見る"
            >
                <h4>リンク集</h4>
                <p>関連団体サイトへのリンク</p>
            </a>
        </div>
    </section>

    <section
        class="contact-section"
        role="region"
        aria-labelledby="contact-heading"
    >
        <div class="contact-container">
            <div class="contact-text">
                <h2 id="contact-heading">お気軽にお問い合わせください</h2>
                <p>見学・体験・入部に関するご質問など、お待ちしています</p>
            </div>
            <a
                href="/contact"
                class="contact-button"
                aria-label="お問い合わせフォームに進む"
            >
                <span>お問い合わせ</span>
            </a>
        </div>
    </section>
</Layout>

<script>
    function easeOutQuart(x: number): number {
        return 1 - Math.pow(1 - x, 4);
    }

    function calculateShapeTransform(
        scrollPercent: number,
        scrollVelocity: number,
        shapeIndex: number,
        isMobile: boolean,
        variation: number = 0
    ): string {
        const params = isMobile
            ? {
                  baseTransform:
                      shapeIndex === 0 ? -150 : shapeIndex === 1 ? -100 : -125,
                  moveRange: 300,
                  rotateRange: 360,
                  scaleRange: 0.3,
                  velocityMultiplier: 0.5,
                  baseScale: 1,
                  waveMultiplier: 0.5,
                  velocityScaleEffect: 0.05,
              }
            : {
                  baseTransform:
                      shapeIndex === 0 ? -300 : shapeIndex === 1 ? -200 : -250,
                  moveRange: 600,
                  rotateRange: 720,
                  scaleRange: 0.5,
                  velocityMultiplier: 0.8,
                  baseScale: 1.2,
                  waveMultiplier: 0.8,
                  velocityScaleEffect: 0.08,
              };

        const easedScroll = easeOutQuart(scrollPercent);

        const variationFactor = 1 + Math.max(-0.2, Math.min(0.2, variation));

        const velocityInfluence =
            Math.max(-40, Math.min(40, scrollVelocity)) *
            (shapeIndex === 1 ? -1 : 1) *
            (isMobile
                ? params.velocityMultiplier
                : params.velocityMultiplier * 1.5);

        const maxMovement = isMobile ? 300 : 600;
        const baseMovement =
            params.baseTransform +
            params.moveRange * easedScroll * variationFactor;
        const movement = Math.max(
            -maxMovement,
            Math.min(maxMovement, baseMovement + velocityInfluence)
        );

        // 回転角度を制限
        const maxRotation = isMobile ? 360 : 720;
        let baseRotation = params.rotateRange * easedScroll * variationFactor;
        if (!isMobile) {
            baseRotation +=
                Math.sin(scrollPercent * Math.PI * 4 * variationFactor) * 30; // 45から30に減少
        }
        const rotation = Math.max(
            -maxRotation,
            Math.min(maxRotation, baseRotation)
        );

        const waveIntensity = isMobile ? 0.7 : 0.8;
        const wave =
            Math.sin(
                scrollPercent * Math.PI * (isMobile ? 2 : 3) * variationFactor +
                    shapeIndex
            ) * waveIntensity;

        const minScale = isMobile ? 0.8 : 0.9;
        const maxScale = isMobile ? 1.3 : 1.5;
        const baseScale =
            params.baseScale +
            params.scaleRange * wave * params.waveMultiplier * variationFactor +
            Math.abs(scrollVelocity) * params.velocityScaleEffect;
        const scale = Math.max(minScale, Math.min(maxScale, baseScale));

        if (shapeIndex === 0) {
            return isMobile
                ? `translateX(${movement}px) rotate(${rotation}deg) scale(${scale})`
                : `translateX(${movement}px) translateY(${movement / 4}px) rotate(${rotation}deg) scale(${scale})`;
        } else if (shapeIndex === 1) {
            return isMobile
                ? `translateX(${-movement}px) rotate(${-rotation}deg) scale(${scale})`
                : `translateX(${-movement}px) translateY(${-movement / 3}px) rotate(${-rotation}deg) scale(${scale})`;
        } else {
            return isMobile
                ? `translateX(${movement / 2}px) translateY(${-movement}px) rotate(${rotation / 2}deg) scale(${scale})`
                : `translateX(${movement / 2}px) translateY(${-movement * 1.2}px) rotate(${rotation / 2}deg) scale(${scale})`;
        }
    }

    let lastScrollPosition = window.scrollY;
    let scrollVelocity = 0;
    const velocityFactor = 0.1;
    const dampingFactor = 0.92;
    let ticking = false;

    let scrollVariation = 0;
    let variationDirection = 1;
    let lastVariationUpdate = 0;

    function updateShapesFromScroll() {
        const currentScroll = window.scrollY;
        const scrollPercent =
            currentScroll /
            (document.documentElement.scrollHeight - window.innerHeight);

        scrollVelocity = (currentScroll - lastScrollPosition) * velocityFactor;
        scrollVelocity = Math.max(
            -5,
            Math.min(5, scrollVelocity * dampingFactor)
        );
        lastScrollPosition = currentScroll;

        const now = Date.now();
        if (now - lastVariationUpdate > 75) {
            scrollVariation +=
                (Math.random() * 0.1 - 0.04) * variationDirection;

            if (Math.abs(scrollVariation) > 0.25) {
                variationDirection *= -1;
                scrollVariation *= 1;
            }

            lastVariationUpdate = now;
        }

        const isMobile = !window.matchMedia("(min-width: 815px)").matches;
        const shapes = document.querySelectorAll(".shape");

        shapes.forEach((shape, index) => {
            const transform = calculateShapeTransform(
                scrollPercent,
                scrollVelocity,
                index,
                isMobile,
                scrollVariation
            );

            (shape as HTMLElement).style.transform = transform;
        });

        ticking = false;
    }

    window.addEventListener("scroll", () => {
        if (!ticking) {
            requestAnimationFrame(() => {
                updateShapesFromScroll();
            });
            ticking = true;
        }
    });

    window.addEventListener("resize", () => {
        if (!ticking) {
            requestAnimationFrame(() => {
                updateShapesFromScroll();
            });
            ticking = true;
        }
    });

    function randomizeCirclePositions() {
        console.log("🎲 randomizeCirclePositions");
        const circles = document.querySelectorAll(".shape");
        const isMobile = !window.matchMedia("(min-width: 815px)").matches;

        circles.forEach((circle, index) => {
            let leftPos, topPos;

            if (index === 0) {
                // circle1
                leftPos = Math.random() * 30 - 20; // -20% ~ 10%
                topPos = Math.random() * 30 + 10; // 10% ~ 40%
            } else if (index === 1) {
                // circle2
                leftPos = Math.random() * 30 + 60; // 60% ~ 90%
                topPos = Math.random() * 30 + 25; // 25% ~ 55%
            } else {
                // circle3
                leftPos = Math.random() * 50 + 25; // 25% ~ 75%
                topPos = Math.random() * 30 + 45; // 45% ~ 75%
            }

            if (isMobile) {
                leftPos = leftPos * 0.8 + 10;
                topPos = Math.min(topPos, 85);
            }

            if (index === 1) {
                (circle as HTMLElement).style.right = `${100 - leftPos}vw`;
                (circle as HTMLElement).style.left = "auto";
            } else {
                (circle as HTMLElement).style.left = `${leftPos}vw`;
                (circle as HTMLElement).style.right = "auto";
            }

            (circle as HTMLElement).style.top = `${topPos}%`;
        });
    }

    document.addEventListener("astro:after-swap", () => {
        randomizeCirclePositions();
    });
</script>

<style>
    section {
        margin-top: 2rem;
    }

    .geometric-background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: -1;
        overflow: hidden;
        animation: feadIn 3s 1 0s forwards ease;
    }

    @keyframes feadIn {
        from {
            opacity: 0;
            transform: translateY(20dvh);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    .shape {
        position: absolute;
        border-radius: 50%;
        background: rgb(var(--blue));
        transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);
        will-change: transform, scale, rotate, opacity, filter;
        backface-visibility: hidden;
        transform-style: preserve-3d;
    }

    .circle1 {
        width: clamp(200px, 30vw, 400px);
        height: clamp(200px, 30vw, 400px);
        left: -10vw;
        top: 20%;
        background: linear-gradient(
            45deg,
            rgb(var(--blue)),
            rgb(var(--sapphire)),
            rgb(var(--lavender))
        );
        animation: pulse1 15s infinite alternate;
    }

    .circle2 {
        width: clamp(150px, 25vw, 300px);
        height: clamp(150px, 25vw, 300px);
        right: -8vw;
        top: 40%;
        background: linear-gradient(
            -45deg,
            rgb(var(--mauve)),
            rgb(var(--pink)),
            rgb(var(--rosewater))
        );
        animation: pulse2 12s infinite alternate;
    }

    .circle3 {
        width: clamp(180px, 28vw, 350px);
        height: clamp(180px, 28vw, 350px);
        left: 45%;
        top: 60%;
        background: linear-gradient(
            135deg,
            rgb(var(--teal)),
            rgb(var(--sky)),
            rgb(var(--sapphire))
        );
        animation: pulse3 18s infinite alternate;
    }

    @keyframes pulse1 {
        0% {
            opacity: 0.3;
            filter: blur(0) hue-rotate(0deg);
        }
        50% {
            filter: blur(1px) hue-rotate(45deg);
        }
        100% {
            opacity: 0.15;
            filter: blur(2px) hue-rotate(90deg);
        }
    }

    @keyframes pulse2 {
        0% {
            opacity: 0.5;
            filter: blur(5px) hue-rotate(0deg);
        }
        50% {
            filter: blur(2.5px) hue-rotate(-45deg);
        }
        100% {
            opacity: 0.25;
            filter: blur(0) hue-rotate(-90deg);
        }
    }

    @keyframes pulse3 {
        0% {
            opacity: 0.25;
            filter: blur(0) hue-rotate(0deg);
        }
        50% {
            filter: blur(4px) hue-rotate(22.5deg);
        }
        100% {
            opacity: 0.15;
            filter: blur(8px) hue-rotate(45deg);
        }
    }
    .hero {
        position: relative;
        color: rgb(var(--text));
        text-align: center;
        padding: 1rem 1rem;
        border-radius: 0.5rem;
        overflow: hidden;
        animation: fadeIn 0.4s ease-out forwards;
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .hero-background {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
    }

    .hero-title {
        font-size: 3rem;
        margin-bottom: 1rem;
        margin-top: 0;
    }

    .hero-content {
        max-width: 1000px;
        margin: 0 auto;
        background: rgb(var(--mantle) / 0.3);
        backdrop-filter: blur(5px);
        padding: 1rem;
        margin-bottom: 1em;
        border-radius: 8px;
    }

    .hero-slide {
        animation: slideUp 1.8s ease-out 0.2s backwards;
    }
    @keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    .hero p {
        font-size: 1.2rem;
    }

    .hero h1 {
        color: rgb(var(--text));
    }

    .hero-link {
        text-decoration: none;
        color: rgb(var(--crust));
        background-color: rgb(var(--teal) / 0.8);
        border-radius: 0.5rem;
        animation: fadeInScale 0.6s ease-out 0.6s backwards;
        transition:
            transform 0.3s ease,
            background-color 0.3s ease;
    }

    @keyframes fadeInScale {
        from {
            opacity: 0;
            transform: scale(0.9);
        }
        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .hero-title {
        animation: slideDown 0.8s ease-out 0.2s backwards;
    }

    @keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .hero p :not(.hero-link) {
        animation: fadeIn 0.8s ease-out 0.4s backwards;
    }

    .hero-link:hover {
        background-color: rgb(var(--sky) / 0.75);
    }

    .links-section {
        padding: 4rem 2rem;
        background: linear-gradient(
            to bottom,
            rgb(var(--base) / 0.6),
            rgb(var(--mantle) / 0.6)
        );
        border-radius: 1rem;
        margin: 3rem auto;
        max-width: 1200px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    }

    .links-container {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        justify-content: center;
        margin: 0 auto;
        max-width: 1000px;
    }

    .links-item {
        flex: 1;
        min-width: 250px;
        padding: 2.5rem 2rem;
        background-color: rgb(var(--surface0) / 0.3);
        backdrop-filter: blur(15px);
        border: 1px solid rgb(var(--surface2));
        border-radius: 12px;
        text-align: center;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
        position: relative;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 1rem;
    }

    .links-item h4 {
        color: rgb(var(--sapphire));
        font-size: 1.4rem;
        margin-bottom: 0.5rem;
        transition: all 0.3s ease;
    }

    .links-item p {
        color: rgb(var(--text));
        font-size: 0.9rem;
        opacity: 0.8;
    }

    .links-item:hover {
        border: 1px solid rgb(var(--sky));
        transform: translateY(-8px) scale(1.02);
        background-color: rgb(var(--surface1) / 0.9);
        box-shadow: 0 16px 32px rgba(0, 0, 0, 0.15);
    }

    .links-item:hover h4 {
        color: rgb(var(--sky));
        transform: translateY(-2px);
    }

    .links-item:hover p {
        opacity: 1;
    }
    .slide {
        width: 100%;
    }
    .slide-content {
        width: 100%;
        height: 100%;
        overflow: hidden;
        border-radius: 0.5rem;
        aspect-ratio: 16/9;
    }
    .slide-content img {
        border-radius: 0.5rem;
        object-fit: cover;
        width: 100%;
        height: 100%;
        aspect-ratio: 16/9;
    }
    .hero-link {
        text-decoration: none;
        display: block;
        transition: transform 0.3s ease;
    }

    .details-text {
        opacity: 0;
        color: rgb(var(--crust));
    }

    @media (hover: hover) {
        .hero-content:hover .details-text {
            opacity: 1;
            transition: opacity 0.3s ease;
        }
    }

    @media (hover: none) {
        .details-text {
            opacity: 1;
        }
    }

    .hero-title {
        color: rgb(var(--crust));
        font-size: 3rem;
        margin-bottom: 1.5rem;
        text-align: center;
    }

    @media (max-width: 815px) {
        .hero-title {
            font-size: 1.8rem;
        }
        .details-text {
            font-size: 0.8rem;
        }
    }

    .hero-image {
        width: 100%;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    @media (max-width: 815px) {
        .hero-title {
            font-size: 1.5rem;
            margin-bottom: 1rem;
        }
    }

    .what-is-aikido-link {
        text-decoration: none;
        display: block;
        transition:
            transform 0.3s ease,
            color 0.3s ease;
        font-weight: bold;
        font-size: 1.8rem;
        animation-iteration-count: infinite;
    }

    .wia-container {
        cursor: pointer;
    }

    .wia-container:hover {
        transform: scale(1.05);
    }

    .section-title {
        color: rgb(var(--text));
        font-size: 2rem;
        text-align: center;
        margin-bottom: 2rem;
    }

    @media (max-width: 815px) {
        .section-title {
            font-size: 1.5rem;
            margin-bottom: 1.5rem;
        }
    }

    .links-column {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        justify-content: center;
        margin: 0 auto;
        max-width: 1000px;
    }

    .contact-section {
        padding: 3rem 2rem;
        margin: 4rem auto;
        max-width: 1200px;
        background: linear-gradient(
            135deg,
            rgb(var(--blue) / 0.3),
            rgb(var(--sapphire) / 0.2)
        );
        backdrop-filter: blur(10px);
        border-radius: 1rem;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    }

    .contact-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-wrap: wrap;
        gap: 2rem;
        max-width: 900px;
        margin: 0 auto;
    }

    .contact-text {
        flex: 1;
        min-width: 300px;
    }

    .contact-text h2 {
        font-size: 2rem;
        margin-bottom: 1rem;
        color: rgb(var(--text));
    }

    .contact-text p {
        color: rgb(var(--subtext0));
        font-size: 1.1rem;
    }

    .contact-button {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.8rem;
        padding: 1rem 2.5rem;
        background: linear-gradient(
            135deg,
            rgb(var(--blue)),
            rgb(var(--sapphire))
        );
        color: rgb(var(--crust));
        text-decoration: none;
        border-radius: 50px;
        font-weight: bold;
        font-size: 1.1rem;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow:
            0 4px 8px rgba(0, 0, 0, 0.1),
            inset 0 1px 0 rgba(255, 255, 255, 0.1);
        position: relative;
        overflow: hidden;
    }

    .contact-button::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, rgb(var(--sky)), rgb(var(--blue)));
        opacity: 0;
        transition: opacity 0.4s ease;
        border-radius: inherit;
    }

    .contact-button span {
        position: relative;
        z-index: 1;
    }

    .contact-button:hover {
        transform: translateY(-4px) scale(1.02);
        box-shadow:
            0 12px 24px rgba(0, 0, 0, 0.2),
            inset 0 1px 0 rgba(255, 255, 255, 0.2);
    }

    .contact-button:hover::after {
        opacity: 1;
    }

    @media (max-width: 815px) {
        .links-section,
        .contact-section {
            padding: 2rem 1rem;
            margin: 2rem auto;
        }

        .links-item {
            min-width: 200px;
            padding: 0.5rem;
        }

        .contact-text h2 {
            font-size: 1.4rem;
        }

        .contact-text p {
            font-size: 0.9rem;
        }

        .contact-button {
            padding: 0.8rem 1.8rem;
            font-size: 1rem;
            margin: 0 auto;
        }
    }

    .wia-container {
        background: linear-gradient(
                to right,
                rgb(var(--surface0) / 0.7),
                rgb(var(--surface1) / 0.7)
            )
            0% center/200%;
        animation: box_color 7s linear infinite;
        padding: 20px;
        text-align: center;
        border-radius: 8px;
        transition: transform 0.3s ease;
        position: relative;
        z-index: 1;
        max-width: 25rem;
        margin: 0 auto;
    }

    .background {
        border: 1.4px solid transparent;
        background-position-x: 0%;
        border-radius: 8px;
        background: linear-gradient(
                48deg,
                rgb(var(--sapphire)),
                rgb(var(--mauve)),
                rgb(var(--sapphire))
            )
            0% center/300%;
        -webkit-mask:
            linear-gradient(#fff 0 0) padding-box,
            linear-gradient(#fff 0 0) border-box;
        -webkit-mask-composite: destination-out;
        mask:
            linear-gradient(#fff 0 0) padding-box,
            linear-gradient(#fff 0 0) border-box;
        mask-composite: exclude;
        overflow: visible;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 0;
    }
    .wia-container:hover .background {
        animation: box_color 9s linear infinite;
        animation: rolate 3s linear infinite;
    }
    @keyframes rolate {
        0% {
            background-position-x: 200%;
        }
        100% {
            background-position-x: 0%;
        }
    }

    @media (max-width: 815px) {
        .hero SlideShow {
            max-width: 100%;
            margin: 0 auto;
            overflow: hidden;
        }
    }
</style>
